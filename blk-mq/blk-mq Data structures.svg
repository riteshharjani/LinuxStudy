<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1097px" height="3085px" viewBox="-0.5 -0.5 1097 3085" content="&lt;mxfile modified=&quot;2019-02-13T09:57:12.761Z&quot; host=&quot;www.draw.io&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&quot; etag=&quot;gpZ04sYH6-xcyA9phbMJ&quot; version=&quot;10.2.2&quot;&gt;&lt;diagram name=&quot;Page-1&quot; id=&quot;9f46799a-70d6-7492-0946-bef42562c5a5&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><rect x="16" y="2" width="512" height="329" fill="#f8cecc" stroke="#b85450" stroke-width="5" pointer-events="none"/><g transform="translate(23.5,10.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="479" height="319" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 319px; max-width: 494px; width: 480px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><div><div><span><b><font style="font-size: 24px">struct blk_mq_ctx {</font></b></span></div><div> 10         <b>struct</b> {</div><div><font color="#cc0000"><b> 11                 spinlock_t                                                        lock;</b></font></div><div><span><b> 12                 struct list_head                                               rq_list;</b></span></div><div><span> 13         }  ____cacheline_aligned_in_smp;</span></div><div><span> 14</span></div><div><span> 15         unsigned int                                                              cpu;</span></div><div><span> 16         unsigned int                                                              index_hw;</span></div><div><span> 17</span></div><div><span> 18         /* incremented at dispatch time */</span></div><div><span> 19         unsigned long                                                           rq_dispatched[2];</span></div><div><span> 20         unsigned long                                                           rq_merged;</span></div><div><span> 21</span></div><div><span> 22         /* incremented at completion time */</span></div><div><span> 23         unsigned long  ____cacheline_aligned_in_smp      rq_completed[2];</span></div><div><span> 24</span></div><div><b> 25         struct request_queue                                            *queue;</b></div><div><b> 26         struct kobject                                                         kobj;</b></div><div><span> 27 } ____cacheline_aligned_in_smp;</span></div></div><div><br /></div></div></div></div></foreignObject><text x="240" y="167" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="568" y="11" width="520" height="940" fill="#f8cecc" stroke="#b85450" stroke-width="5" pointer-events="none"/><g transform="translate(575.5,19.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="494" height="922" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 930px; max-width: 502px; width: 495px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><div><div><div><div><span><font style="font-size: 24px"><b>struct blk_mq_hw_ctx {</b></font></span></div><div><span> 13         struct {</span></div><div><span><b><font color="#cc0000"> 14                 spinlock_t                           lock;</font></b></span></div><div><span><b> 15                 struct list_head                  dispatch;</b></span></div><div><span> 16                 unsigned long                      state;          /* BLK_MQ_S_* flags */</span></div><div><span> 17         } ____cacheline_aligned_in_smp;</span></div><div><span> 18</span></div><div><b> 19         struct delayed_work                 run_work;</b></div><div><span> 20         cpumask_var_t                           cpumask;</span></div><div><span> 21         int                                                next_cpu;</span></div><div><span> 22         int                                                next_cpu_batch;</span></div><div><span> 23</span></div><div> 24         unsigned long                              <b>flags</b>;          /* <b>BLK_MQ_F_</b>* flags */</div><div><span> 25</span></div><div><b> 26         void                                          *sched_data;</b></div><div><b> 27         struct request_queue             *queue;</b></div><div><b> 28         struct blk_flush_queue          *fq;</b></div><div><span> 29</span></div><div><span> 30         void                                           *driver_data;</span></div><div><span> 31</span></div><div><b> 32         struct sbitmap                          ctx_map;</b></div><div><span> 33</span></div><div><b> 34         struct blk_mq_ctx                    **ctxs;</b></div><div><span> 35         unsigned int                               nr_ctx;</span></div><div><span> 36  </span></div><div><span><font color="#cc00cc"><b> 37         wait_queue_entry_t                 dispatch_wait;</b></font></span></div><div><span><font color="#cc00cc"><b> 38         atomic_t                                    wait_index;</b></font></span></div><div><span> 39</span></div><div><b> 40         struct blk_mq_tags                  *tags;</b></div><div><b> 41         struct blk_mq_tags                  *sched_tags;</b></div><div><span> 42</span></div><div><span> 43         unsigned long                             queued;</span></div><div><span> 44         unsigned long                             run;</span></div><div><span> 45 #define BLK_MQ_MAX_DISPATCH_ORDER       7</span></div><div><span> 46         unsigned long           dispatched[BLK_MQ_MAX_DISPATCH_ORDER];</span></div><div><span> 47</span></div><div><span> 48         unsigned int                                numa_node;</span></div><div><span> 49         unsigned int                                queue_num;</span></div><div><span> 50</span></div><div><span> 51         atomic_t                                      nr_active;</span></div><div><span> 52</span></div><div><b> 53         struct hlist_node                       cpuhp_dead;</b></div><div><b> 54         struct kobject                             kobj;</b></div><div><span> 55</span></div><div><span> 56         unsigned long                              poll_considered;</span></div><div><span> 57         unsigned long                              poll_invoked;</span></div><div><span> 58         unsigned long                              poll_success;</span></div><div><span> 59</span></div><div><span> 60 #ifdef CONFIG_BLK_DEBUG_FS</span></div><div><b> 61         struct dentry                              *debugfs_dir;</b></div><div><b> 62         struct dentry                              *sched_debugfs_dir;</b></div><div><span> 63 #endif</span></div><div><span> 64</span></div><div><span> 65         /* Must be the last member - see also blk_mq_hw_ctx_size(). */</span></div><div><b> 66         struct srcu_struct                      queue_rq_srcu[0];</b></div><div><span> 67 };</span></div></div></div></div><div><br /></div></div></div></div></foreignObject><text x="247" y="468" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="19" y="631" width="449" height="310" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g transform="translate(24.5,637.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="431" height="305" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 305px; max-width: 436px; width: 432px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><font style="font-size: 18px">/* filled and provided by LLD */</font></div><div><font style="font-size: 24px"><b>struct blk_mq_tag_set {</b></font></div><div style="font-size: 14px"> 70         unsigned int                             *mq_map;</div><div style="font-size: 14px"><b> 71         const struct blk_mq_ops      *ops;</b></div><div style="font-size: 14px"><b><br /></b></div><div style="font-size: 14px"> 72         unsigned int            nr_hw_queues;</div><div style="font-size: 14px"> 73         unsigned int            queue_depth;    /* max hw supported */</div><div style="font-size: 14px"> 74         unsigned int            reserved_tags;</div><div style="font-size: 14px"> 75         unsigned int            cmd_size;       /* per-request extra data */</div><div style="font-size: 14px"> 76         int                            numa_node;</div><div style="font-size: 14px"> 77         unsigned int            timeout;</div><div style="font-size: 14px"> 78         unsigned int            flags;          /* BLK_MQ_F_* */</div><div style="font-size: 14px"><b> 79         void                        *driver_data;</b></div><div style="font-size: 14px"> 80</div><div style="font-size: 14px"><b> 81         struct blk_mq_tags      **tags;</b></div><div style="font-size: 14px"><span style="color: rgb(204 , 0 , 0)"> 83         </span><b style="color: rgb(204 , 0 , 0)">struct mutex</b><span style="color: rgb(204 , 0 , 0)">                  </span><b style="color: rgb(204 , 0 , 0)">tag_list_lock</b><span style="color: rgb(204 , 0 , 0)">;</span><br /></div><div style="font-size: 14px"><b> 84         struct list_head             tag_list;</b></div><div style="font-size: 14px"> 85 };</div><div style="font-size: 14px"><br /></div></div></div></foreignObject><text x="216" y="159" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="615" y="975" width="460" height="438" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g transform="translate(620.5,981.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="429" height="430" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 433px; max-width: 447px; width: 430px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div>160 enum {</div><div>161         BLK_MQ_F_SHOULD_MERGE   = 1 &lt;&lt; 0,</div><div>162         BLK_MQ_F_TAG_SHARED     = 1 &lt;&lt; 1,</div><div>163         BLK_MQ_F_SG_MERGE       = 1 &lt;&lt; 2,</div><div>164         BLK_MQ_F_BLOCKING       = 1 &lt;&lt; 5,</div><div>165         BLK_MQ_F_NO_SCHED       = 1 &lt;&lt; 6,</div><div>166         BLK_MQ_F_ALLOC_POLICY_START_BIT = 8,</div><div>167         BLK_MQ_F_ALLOC_POLICY_BITS = 1,</div><div>168</div><div>169         BLK_MQ_S_STOPPED        = 0,</div><div>170         BLK_MQ_S_TAG_ACTIVE     = 1,</div><div>171         BLK_MQ_S_SCHED_RESTART  = 2,</div><div>172         BLK_MQ_S_TAG_WAITING    = 3,</div><div>173         BLK_MQ_S_START_ON_RUN   = 4,</div><div>174</div><div>175         BLK_MQ_MAX_DEPTH        = 10240,</div><div>176</div><div>177         BLK_MQ_CPU_WORK_BATCH   = 8,</div><div>178 };</div><div><br /></div><div>179 #define BLK_MQ_FLAG_TO_ALLOC_POLICY(flags) \</div><div>180         ((flags &gt;&gt; BLK_MQ_F_ALLOC_POLICY_START_BIT) &amp; \</div><div>181                 ((1 &lt;&lt; BLK_MQ_F_ALLOC_POLICY_BITS) - 1))</div><div>182 #define BLK_ALLOC_POLICY_TO_MQ_FLAG(policy) \</div><div>183         ((policy &amp; ((1 &lt;&lt; BLK_MQ_F_ALLOC_POLICY_BITS) - 1)) \</div><div>184                 &lt;&lt; BLK_MQ_F_ALLOC_POLICY_START_BIT)</div><div><br /></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="215" y="222" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="615" y="1672" width="460" height="650" fill="#e1d5e7" stroke="#9673a6" pointer-events="none"/><g transform="translate(620.5,1678.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="344" height="645" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 645px; max-width: 447px; width: 345px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><font style="font-size: 24px"><b>struct request_queue {</b></font></div><div>        dma_drain_needed_fn     *dma_drain_needed;</div><div>        lld_busy_fn                       *lld_busy_fn;</div><div><br /></div><div><b>+       struct blk_mq_ops        *mq_ops;</b></div><div>+</div><div>+       unsigned int                     *mq_map;</div><div>+</div><div>+       /* sw queues */</div><div><b>+       struct blk_mq_ctx         *queue_ctx;</b></div><div>+       unsigned int                     nr_queues;</div><div>+</div><div>+       /* hw dispatch queues */</div><div><b>+       struct blk_mq_hw_ctx   **queue_hw_ctx;</b></div><div>+       unsigned int                      nr_hw_queues;</div><div>+</div><div><br /></div><div><div>        struct kobject                      kobj;</div><div><br /></div><div>+       /*</div><div>+        * mq queue kobject</div><div>+        */</div><div><b>+       struct kobject                   mq_kobj;</b></div></div><div><br /></div><div><br /></div><div><br /></div><div><div>-       struct request                     flush_rq;</div><div><b>+       union {</b></div><div><b>+               struct request          flush_rq;</b></div><div><b>+               struct {</b></div><div><font color="#cc0000"><b>+                       spinlock_t        mq_flush_lock;</b></font></div><div><font color="#cc00cc"><b>+         struct work_struct         mq_flush_work;</b></font></div><div>+               };</div><div>+       };</div></div><div><br /></div><div><div><b><font color="#cc00cc">+       wait_queue_head_t            mq_freeze_wq;</font></b></div><div><b>+       struct percpu_counter       mq_usage_counter;</b></div><div>+       struct list_head                     all_q_node;</div></div><div><br /></div><div><br /></div><div><br /></div><div><br /></div><div><br /></div></div></div></foreignObject><text x="172" y="329" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="18" y="1252" width="343" height="285" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g transform="translate(23.5,1258.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="312" height="280" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 280px; max-width: 330px; width: 313px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><div><div><div><div><div><div><div><div><div><div><div><div style="font-size: 14px">  7 /*</div><div style="font-size: 14px">  8  * Tag address space map.</div><div style="font-size: 14px">  9  */</div><div><font style="font-size: 24px"><b>struct blk_mq_tags {</b></font></div><div style="font-size: 14px"> 11         unsigned int              nr_tags;</div><div style="font-size: 14px"> 12         unsigned int              nr_reserved_tags;</div><div style="font-size: 14px"> 13</div><div style="font-size: 14px"><b><font color="#cc00cc"> 14         atomic_t                   active_queues;</font></b></div><div style="font-size: 14px"> 15</div><div style="font-size: 14px"><b> 16         struct sbitmap_queue bitmap_tags;</b></div><div style="font-size: 14px"><b> 17         struct sbitmap_queue breserved_tags;</b></div><div style="font-size: 14px"> 18</div><div style="font-size: 14px"><b> 19         struct request          **rqs;</b></div><div style="font-size: 14px"><b> 20         struct request          **static_rqs;</b></div><div style="font-size: 14px"><b> 21         struct list_head       page_list;</b></div><div style="font-size: 14px"> 22 };</div><div style="font-size: 14px"><br /></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="156" y="147" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="16" y="1132" width="537" height="100" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g transform="translate(21.5,1138.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="521" height="94" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 95px; max-width: 524px; width: 522px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div>200 enum {</div><div>201         BLK_MQ_REQ_NOWAIT       = (1 &lt;&lt; 0), /* return when out of requests */</div><div>202         BLK_MQ_REQ_RESERVED     = (1 &lt;&lt; 1), /* allocate from reserved pool */</div><div>203         BLK_MQ_REQ_INTERNAL     = (1 &lt;&lt; 2), /* allocate internal/sched tag */</div><div>204 };</div><div><br /></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="261" y="54" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="16" y="971" width="382" height="130" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g transform="translate(21.5,977.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="336" height="125" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 125px; max-width: 369px; width: 337px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 14px"><div style="font-size: 24px"><div><div><b>struct blk_mq_queue_data {</b></div><div><b> 88         struct request     *rq;</b></div><div> 89         bool                       last;</div><div> 90 };</div><div><br /></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></foreignObject><text x="168" y="69" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><path d="M 1075.29 1996.53 L 1075.29 1996.53" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 1075.29 1996.53 L 1075.29 1996.53 L 1075.29 1996.53 L 1075.29 1996.53 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 11.83 2289.17 L 12.2 2287.54" fill="none" stroke="#000033" stroke-miterlimit="10" pointer-events="none"/><path d="M 11.84 2289.13 L 11.26 2286.76 L 12.2 2287.54 L 13.39 2287.24 Z" fill="#000033" stroke="#000033" stroke-miterlimit="10" pointer-events="none"/><rect x="16" y="421" width="372" height="180" fill="#f8cecc" stroke="#b85450" stroke-width="5" pointer-events="none"/><g transform="translate(23.5,429.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="304" height="170" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 170px; max-width: 354px; width: 305px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><div><div><div><b><font style="font-size: 24px">struct blk_mq_alloc_data {</font></b></div><div>110         /* input parameter */</div><div><b>111         struct request_queue *q;</b></div><div>112         unsigned int <b>flags</b>;</div><div>113         unsigned int shallow_depth;</div><div>114</div><div>115         /* input &amp; output parameter */</div><div><b>116         struct blk_mq_ctx *ctx;</b></div><div><b>117         struct blk_mq_hw_ctx *hctx;</b></div><div>118 };</div></div></div></div><div><br /></div></div></div></foreignObject><text x="152" y="92" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><path d="M 1008 231 Q 1058 231 1033 206 Q 1008 181 1048 521 Q 1088 861 853.98 972.61" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 849.24 974.87 L 854.06 968.7 L 853.98 972.61 L 857.07 975.02 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 198 501 Q 248 501 223 476 Q 198 451 92.74 1130.24" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 91.94 1135.42 L 89.55 1127.97 L 92.74 1130.24 L 96.47 1129.04 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 288 581 Q 338 581 313 556 Q 288 531 558.92 488.4" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 564.85 487.46 L 557.57 492.66 L 558.92 488.4 L 556.33 484.76 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 268 561 Q 318 561 293 536 Q 268 511 268.22 341.24" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 268.23 335.24 L 272.22 343.24 L 268.22 341.24 L 264.22 343.23 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><rect x="21" y="1672" width="402" height="310" fill="#e1d5e7" stroke="#9673a6" pointer-events="none"/><g transform="translate(26.5,1678.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="387" height="305" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 305px; max-width: 389px; width: 388px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><font style="font-size: 24px"><b>struct request {</b></font></div><div><font size="3"><br /></font></div><div><font size="3">-       struct list_head                         queuelist;</font></div><div><font size="3">-       struct call_single_data              csd;</font></div><div><font size="3">+       union {</font></div><div><font size="3">+               struct list_head                queuelist;</font></div><div><font size="3">+               struct llist_node               ll_list;</font></div><div><font size="3">+       };</font></div><div><font size="3">+       union {</font></div><div><font size="3"><b>+               struct call_single_data     csd;</b></font></div><div><font size="3" color="#cc00cc"><b>+               struct work_struct            mq_flush_data;</b></font></div><div><font size="3">+       };</font></div><div><font size="3"><br /></font></div><div><font size="3"><b>        struct request_queue               *q;</b></font></div><div><font size="3"><b>+      struct blk_mq_ctx                    *mq_ctx;</b></font></div><div><font size="3"><br /></font></div><div><br /></div></div></div></foreignObject><text x="194" y="159" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><path d="M 357.65 1951.82 Q 418 1942 393 1917 Q 368 1892 467.71 340.04" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 468.09 334.05 L 471.57 342.29 L 467.71 340.04 L 463.59 341.78 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 898 1842 Q 948 1842 948 1697 Q 948 1552 858 1572 Q 768 1592 331.94 338.78" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 329.97 333.11 L 336.38 339.35 L 331.94 338.78 L 328.82 341.98 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 938 1902 Q 988 1902 1028 1882 Q 1068 1862 810.47 949.16" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 808.84 943.39 L 814.86 950 L 810.47 949.16 L 807.16 952.17 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><rect x="-0.5" y="2532" width="547" height="550" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g transform="translate(5.5,2538.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="533" height="498" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 545px; max-width: 534px; width: 533.824px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><div><span><font style="font-size: 24px"><b>struct blk_mq_ops {</b></font></span></div><div><span><font size="3">110         /*</font></span></div><div><span><font size="3">111          * Queue request</font></span></div><div><span><font size="3">112          */</font></span></div><div><span><font size="3"><b>113         queue_rq_fn             *queue_rq;</b></font></span></div><div><span><font size="3">114</font></span></div><div><span><font size="3">115         /*</font></span></div><div><span><font size="3">116          * Called on request timeout</font></span></div><div><span><font size="3">117          */</font></span></div><div><span><font size="3"><b>118         timeout_fn              *timeout;</b></font></span></div><div><span><font size="3">119</font></span></div><div><span><font size="3">120         /*</font></span></div><div><span><font size="3">121          * Called to poll for completion of a specific tag.</font></span></div><div><span><font size="3">122          */</font></span></div><div><span><font size="3"><b>123         poll_fn                 *poll;</b></font></span></div><div><span><font size="3">124</font></span></div><div><span><font size="3"><b>125         softirq_done_fn         *complete;</b></font></span></div><div><span><font size="3">126</font></span></div><div><span><font size="3">127         /*</font></span></div><div><span><font size="3">128          * Called when the block layer side of a hardware queue has been</font></span></div><div><span><font size="3">129          * set up, allowing the driver to allocate/init matching structures.</font></span></div><div><span><font size="3">130          * Ditto for exit/teardown.</font></span></div><div><span><font size="3">131          */</font></span></div><div><span><font size="3"><b>132         init_hctx_fn            *init_hctx;</b></font></span></div><div><span><font size="3"><b>133         exit_hctx_fn            *exit_hctx;</b></font></span></div><div><br /></div></div></div></div></foreignObject><text x="267" y="256" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="555" y="2532" width="540" height="550" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g transform="translate(560.5,2538.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="525" height="470" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 545px; max-width: 527px; width: 526px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><div><span style="font-size: medium">135         /*</span><br /></div><div><span><font size="3">136          * Called for every command allocated by the block layer to allow</font></span></div><div><span><font size="3">137          * the driver to set up driver specific data.</font></span></div><div><span><font size="3">138          *</font></span></div><div><span><font size="3">139          * Tag greater than or equal to queue_depth is for setting up</font></span></div><div><span><font size="3">140          * flush request.</font></span></div><div><span><font size="3">141          *</font></span></div><div><span><font size="3">142          * Ditto for exit/teardown.</font></span></div><div><span><font size="3">143          */</font></span></div><div><span><font size="3"><b>144         init_request_fn         *init_request;</b></font></span></div><div><span><font size="3"><b>145         exit_request_fn         *exit_request;</b></font></span></div><div><span><font size="3">146         /* Called from inside blk_get_request() */</font></span></div><div><span><font size="3"><b>147         void (*initialize_rq_fn)(struct request *rq);</b></font></span></div><div><span><font size="3">148</font></span></div><div><span><font size="3"><b>149         map_queues_fn           *map_queues;</b></font></span></div><div><span><font size="3">150</font></span></div><div><span><font size="3">151 #ifdef CONFIG_BLK_DEBUG_FS</font></span></div><div><span><font size="3">152         /*</font></span></div><div><span><font size="3">153          * Used by the debugfs implementation to show driver-specific</font></span></div><div><span><font size="3">154          * information about a request.</font></span></div><div><span><font size="3">155          */</font></span></div><div><span><font size="3"><b>156         void (*show_rq)(struct seq_file *m, struct request *rq);</b></font></span></div><div><span><font size="3">157 #endif</font></span></div><div><span><font size="3">158 };</font></span></div></div><div><br /></div></div></div></foreignObject><text x="263" y="242" fill="#000000" text-anchor="middle" font-size="14px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><rect x="16" y="1997" width="562" height="485" fill="#f8cecc" stroke="#b85450" pointer-events="none"/><g transform="translate(21.5,2003.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="549" height="480" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Verdana; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 480px; max-width: 549px; width: 548.824px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><div><div><span><font style="font-size: 14px">  /*</font></span></div><div><span><font size="3">  * Driver command data is immediately after the request. <br />  * So subtract request</font></span></div><div><span><font size="3">  * size to get back to the original request, add request size to get    * the PDU.</font></span></div><div><span><font size="3">  */</font></span></div><div><span><font size="3"><br /></font></span></div><div><span><font size="3">275 static inline struct request *blk_mq_rq_from_pdu(void *pdu)</font></span></div><div><span><font size="3">276 {</font></span></div><div><span><font size="3">277         return pdu - sizeof(struct request);</font></span></div><div><span><font size="3">278 }</font></span></div><div><span><font size="3">279 static inline void *blk_mq_rq_to_pdu(struct request *rq)</font></span></div><div><span><font size="3">280 {</font></span></div><div><span><font size="3">281         return rq + 1;</font></span></div><div><span><font size="3">282 }</font></span></div><div><span><font size="3">283</font></span></div><div><span><font size="3">284 #define queue_for_each_hw_ctx(q, hctx, i)                         \</font></span></div><div><span><font size="3">285         for ((i) = 0; (i) &lt; (q)-&gt;nr_hw_queues &amp;&amp;                    \</font></span></div><div><span><font size="3">286              ({ hctx = (q)-&gt;queue_hw_ctx[i]; 1; }); (i)++)</font></span></div><div><span><font size="3">287</font></span></div><div><span><font size="3">288 #define hctx_for_each_ctx(hctx, ctx, i)                               \</font></span></div><div><span><font size="3">289         for ((i) = 0; (i) &lt; (hctx)-&gt;nr_ctx &amp;&amp;                            \</font></span></div><div><span><font size="3">290              ({ ctx = (hctx)-&gt;ctxs[(i)]; 1; }); (i)++)</font></span></div><div><span><font size="3">291</font></span></div><div><span><font size="3">292 #endif</font></span></div></div></div><div><br /></div></div></div></foreignObject><text x="274" y="247" fill="#000000" text-anchor="middle" font-size="14px" font-family="Verdana">[Not supported by viewer]</text></switch></g><rect x="603" y="2332" width="492" height="160" fill="#e1d5e7" stroke="#9673a6" pointer-events="none"/><g transform="translate(608.5,2338.5)"><switch><foreignObject style="overflow:visible;" pointer-events="all" width="479" height="155" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 14px; font-family: Verdana; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 155px; max-width: 479px; width: 478.824px; white-space: normal; overflow-wrap: normal;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"><div><div><b><font style="font-size: 24px"> struct blk_plug {</font></b></div><div><span><br /></span></div><div><span>     unsigned long magic; /* detect uninitialized use-cases */</span><br /></div><div><span style="font-size: medium">     struct list_head list; /* requests */</span><br /></div><div><b><font size="3">+   struct list_head mq_list; /* blk-mq requests */</font></b></div><div><font size="3">     struct list_head cb_list; /* md requires an unplug callback */</font></div><div><font size="3"> };</font></div></div><div><br /></div></div></div></foreignObject><text x="239" y="84" fill="#000000" text-anchor="middle" font-size="14px" font-family="Verdana">[Not supported by viewer]</text></switch></g><path d="M 298 1482 Q 348 1482 323 1457 Q 298 1432 212.27 1664.1" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 210.19 1669.73 L 209.21 1660.84 L 212.27 1664.1 L 216.71 1663.61 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 298 882 Q 348 882 323 857 Q 298 832 318 887 Q 338 942 378 957 Q 418 972 270.49 1244.76" fill="none" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/><path d="M 267.63 1250.03 L 267.92 1241.09 L 270.49 1244.76 L 274.96 1244.9 Z" fill="#000000" stroke="#000000" stroke-width="2" stroke-miterlimit="10" pointer-events="none"/></g></svg>